"use strict";(self.webpackChunkcracknuts_website=self.webpackChunkcracknuts_website||[]).push([[1536],{99027:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"0.19.0","label":"0.19.0","banner":null,"badge":true,"noIndex":false,"className":"docs-version-0.19.0","isLast":true,"docsSidebars":{"docSidebar":[{"type":"link","label":"Introduction","href":"/en/docs/introduction","docId":"introduction","unlisted":false},{"type":"category","label":"Quick Start","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Host Software Installation","href":"/en/docs/getting-started/host-sdk-installation","docId":"getting-started/host-sdk-installation","unlisted":false},{"type":"link","label":"Running CrackNuts","href":"/en/docs/getting-started/startup-cracknuts","docId":"getting-started/startup-cracknuts","unlisted":false},{"type":"link","label":"Trace Acquisition","href":"/en/docs/getting-started/trace-acquisition","docId":"getting-started/trace-acquisition","unlisted":false},{"type":"link","label":"Trace Analysis","href":"/en/docs/getting-started/trace-analysis","docId":"getting-started/trace-analysis","unlisted":false},{"type":"link","label":"Host Software Update","href":"/en/docs/getting-started/host-sdk-update","docId":"getting-started/host-sdk-update","unlisted":false},{"type":"link","label":"Support","href":"/en/docs/getting-started/support","docId":"getting-started/support","unlisted":false}],"href":"/en/docs/getting-started/"},{"type":"category","label":"Software","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Host Usage Guide","href":"/en/docs/software/host","docId":"software/host","unlisted":false},{"type":"link","label":"API","href":"/en/docs/software/api","docId":"software/api","unlisted":false}],"href":"/en/docs/software/"},{"type":"category","label":"\u786c\u4ef6","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Cracker-S1","href":"/en/docs/hardware/cracker_s1","docId":"hardware/cracker_s1","unlisted":false}],"href":"/en/docs/hardware/"},{"type":"category","label":"Tutorials","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"PIP Mirror Configuration","href":"/en/docs/tips-tricks/pip-mirror","docId":"tips-tricks/pip-mirror","unlisted":false},{"type":"link","label":"Python Virtual Environment","href":"/en/docs/tips-tricks/virtual-environment","docId":"tips-tricks/virtual-environment","unlisted":false},{"type":"link","label":"Nut_stm32f103c8 Side-Channel Analysis","href":"/en/docs/tips-tricks/stm32f103_sca","docId":"tips-tricks/stm32f103_sca","unlisted":false},{"type":"link","label":"Nut Development Getting Started - Basics","href":"/en/docs/tips-tricks/nut-getting-started","docId":"tips-tricks/nut-getting-started","unlisted":false},{"type":"link","label":"SCARR Installation","href":"/en/docs/tips-tricks/install-scarr","docId":"tips-tricks/install-scarr","unlisted":false},{"type":"link","label":"Jupyter Code Autocompletion","href":"/en/docs/tips-tricks/jupyter-autocompletion","docId":"tips-tricks/jupyter-autocompletion","unlisted":false},{"type":"link","label":"Using Jupyter in VS Code","href":"/en/docs/tips-tricks/jupyter-in-vscode","docId":"tips-tricks/jupyter-in-vscode","unlisted":false}],"href":"/en/docs/tips-tricks/"},{"type":"link","label":"Tutorials","href":"/en/docs/tutorials/","docId":"tutorials/index","unlisted":false},{"type":"category","label":"Development","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Open Source Contribution","href":"/en/docs/development/opensource","docId":"development/opensource","unlisted":false},{"type":"link","label":"License","href":"/en/docs/development/license","docId":"development/license","unlisted":false},{"type":"link","label":"Roadmap","href":"/en/docs/development/roadmap","docId":"development/roadmap","unlisted":false}],"href":"/en/docs/development/"},{"type":"category","label":"FAQ","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"GitHub Access","href":"/en/docs/faq/connect-github-failed","docId":"faq/connect-github-failed","unlisted":false},{"type":"link","label":"Cracker Connection","href":"/en/docs/faq/cracker-connect-failed","docId":"faq/cracker-connect-failed","unlisted":false},{"type":"link","label":"Triger Timeout","href":"/en/docs/faq/trigger-timeout","docId":"faq/trigger-timeout","unlisted":false}],"href":"/en/docs/faq/"}],"tutorialSidebar":[]},"docs":{"development/index":{"id":"development/index","title":"Development","description":"","sidebar":"docSidebar"},"development/license":{"id":"development/license","title":"License","description":"","sidebar":"docSidebar"},"development/opensource":{"id":"development/opensource","title":"Open Source Contribution","description":"The software part of CrackNuts is open source, and the code is hosted on the following platforms:","sidebar":"docSidebar"},"development/roadmap":{"id":"development/roadmap","title":"Roadmap","description":"alt text","sidebar":"docSidebar"},"faq/connect-github-failed":{"id":"faq/connect-github-failed","title":"GitHub Access","description":"If you encounter this issue, you can visit our organization on Gitee. The repository names are the same as on GitHub.","sidebar":"docSidebar"},"faq/cracker-connect-failed":{"id":"faq/cracker-connect-failed","title":"Cracker Connection","description":"1. First, check if the Cracker is working properly. Is the power indicator on the Cracker lit, and is the IP address displayed on the screen?","sidebar":"docSidebar"},"faq/index":{"id":"faq/index","title":"Frequently Asked Questions","description":"This chapter mainly introduces common issues and solutions encountered while using CrackNuts to help you better utilize CrackNuts.","sidebar":"docSidebar"},"faq/trigger-timeout":{"id":"faq/trigger-timeout","title":"Triger Timeout","description":"This issue mainly occurs during the waveform acquisition process. If you encounter this problem, please check:","sidebar":"docSidebar"},"getting-started/host-sdk-installation":{"id":"getting-started/host-sdk-installation","title":"Host Software Installation","description":"The CrackNuts host software provides a Python-based development SDK. The default integrated development environment is Jupyter, which includes built-in components for convenient device control and data acquisition. Users can also control the devices using standard Python scripts outside the Jupyter environment.","sidebar":"docSidebar"},"getting-started/host-sdk-update":{"id":"getting-started/host-sdk-update","title":"Host Software Update","description":"Updating CrackNuts is very easy. Simply open the environment where CrackNuts is installed (if you installed it via the quick installation command, you can launch it directly using the CrackNuts desktop shortcut), then run the following command:","sidebar":"docSidebar"},"getting-started/index":{"id":"getting-started/index","title":"Quick Start","description":"This section will quickly guide you on how to use CrackNuts for power data acquisition and analysis.","sidebar":"docSidebar"},"getting-started/startup-cracknuts":{"id":"getting-started/startup-cracknuts","title":"Running CrackNuts","description":"This section uses the Cracker-S1 device as an example. In the CrackNuts side-channel acquisition and analysis integrated solution, the host software is provided to users in the form of a Python SDK. Users can use Jupyter as a programming IDE to control the device, acquire data, and perform subsequent data analysis.","sidebar":"docSidebar"},"getting-started/support":{"id":"getting-started/support","title":"Support","description":"The software part of CrackNuts is open source, and the code is hosted on the following platforms:","sidebar":"docSidebar"},"getting-started/trace-acquisition":{"id":"getting-started/trace-acquisition","title":"Trace Acquisition","description":"This section demonstrates the basic data acquisition process using the nutstm32f103c8 as the Nut (which comes preloaded with Golden firmware for demo/testing purposes). We\'ll use Jupyter as the development environment (install via pip install cracknuts[jupyter]).","sidebar":"docSidebar"},"getting-started/trace-analysis":{"id":"getting-started/trace-analysis","title":"Trace Analysis","description":"The collected traces are, by default, saved in the dataset folder located in the same directory as the current Jupyter notebook. The filenames are timestamped, for example: 20250519101918.zarr.","sidebar":"docSidebar"},"hardware/cracker_s1":{"id":"hardware/cracker_s1","title":"Cracker-S1","description":"Cracker-S1\u662f\u4e00\u6b3e\u4e13\u95e8\u9488\u5bf9\u5d4c\u5165\u5f0f\u82af\u7247\u7684\u4fa7\u4fe1\u9053\u91c7\u96c6\u5de5\u5177\uff0c\u5355\u53f0\u8bbe\u5907\u5373\u53ef\u5b9e\u73b0\u9ad8\u8d28\u91cf\u4fa7\u4fe1\u9053\u4fe1\u53f7\u91c7\u96c6\u3002\u652f\u6301UART\u3001SPI\u3001I2C\u3001CAN\uff08\u5f00\u53d1\u4e2d\uff09\u7b49\u5e38\u7528\u901a\u4fe1\u534f\u8bae\uff0c\u677f\u8f7d12bit\u9ad8\u7cbe\u5ea6ADC\u82af\u7247\uff0c\u91c7\u6837\u7387\u6700\u9ad8\u53ef\u8fbe65MSamples/S\uff0c\u652f\u6301\u540c\u6b65\u91c7\u6837\u529f\u80fd\u3002\u8bbe\u5907\u91c7\u7528\u7f51\u7edc\u63a5\u53e3\u65b9\u4fbf\u7ec4\u7f51\u548c\u8fdc\u7a0b\u63a7\u5236\uff0c\u8bbe\u5907\u652f\u6301PoE\uff08Power over Ethernet\uff09\u65b9\u5f0f\u4f9b\u7535\u3002","sidebar":"docSidebar"},"hardware/index":{"id":"hardware/index","title":"\u786c\u4ef6","description":"\u672c\u7ae0\u8282\u4e3b\u8981\u4ecb\u7ecd\u786c\u4ef6\u76f8\u5173\u7684\u4fe1\u606f\u548c\u4f7f\u7528\u3002","sidebar":"docSidebar"},"introduction":{"id":"introduction","title":"Introduction","description":"The Cracknuts project aims to provide users with a \\"professional, easy-to-use, open-source\\" chip security analysis solution. It enables power analysis and electromagnetic analysis on various target chips, and can perform clock glitching and voltage glitching fault injection attacks. All software and hardware code of the project will be open-sourced, facilitating user customization and integration.","sidebar":"docSidebar"},"software/api":{"id":"software/api","title":"API","description":"Visit https://cracknuts.readthedocs.io/en/stable to read the host-side API documentation.","sidebar":"docSidebar"},"software/host":{"id":"software/host","title":"Host Usage Guide","description":"The host is developed in Python and communicates with the device via TCP protocol.","sidebar":"docSidebar"},"software/index":{"id":"software/index","title":"Software","description":"This section mainly introduces how to use the host software.","sidebar":"docSidebar"},"tips-tricks/index":{"id":"tips-tricks/index","title":"Tips and Tricks","description":"This section introduces some tips and best practices for using CrackNuts, helping you get the most out of CrackNuts.","sidebar":"docSidebar"},"tips-tricks/install-scarr":{"id":"tips-tricks/install-scarr","title":"SCARR Installation","description":"SCARR is the default framework used by CrackNuts for data analysis, and it also serves as the default format for trace acquisition (based on a specific directory structure using Zarr). It is recommended to install SCARR when performing data analysis.","sidebar":"docSidebar"},"tips-tricks/jupyter-autocompletion":{"id":"tips-tricks/jupyter-autocompletion","title":"Jupyter Code Autocompletion","description":"By default, after installing Jupyter, code suggestions and autocompletion are not available. You can enable this feature in the Jupyter environment by installing the following plugins:","sidebar":"docSidebar"},"tips-tricks/jupyter-in-vscode":{"id":"tips-tricks/jupyter-in-vscode","title":"Using Jupyter in VS Code","description":"In data analysis, machine learning, and scientific research, Jupyter is a widely used tool. However, sometimes we don\u2019t want to switch to a browser, but rather use Jupyter directly in VS Code. Fortunately, VS Code provides powerful official extensions that allow you to run Notebooks just like in the browser. Moreover, CrackNuts fully supports the Jupyter environment in VS Code.","sidebar":"docSidebar"},"tips-tricks/nut-getting-started":{"id":"tips-tricks/nut-getting-started","title":"Nut Development Getting Started - Basics","description":"Step 1. Environment Preparation","sidebar":"docSidebar"},"tips-tricks/pip-mirror":{"id":"tips-tricks/pip-mirror","title":"PIP Mirror Configuration","description":"After setting up the Python environment, since downloading packages from the pypi repository can be slow over domestic networks, it is recommended to configure pip mirrors. This can speed up downloads and avoid dependency installation failures. You can choose to configure one of the following two mirrors.","sidebar":"docSidebar"},"tips-tricks/stm32f103_sca":{"id":"tips-tricks/stm32f103_sca","title":"Nut_stm32f103c8 Side-Channel Analysis","description":"STM32F103C8 is a microcontroller chip based on the ARM Cortex-M3 core, launched by STMicroelectronics. Due to its high performance, low power consumption, and rich peripheral resources, this chip is widely used in embedded systems.","sidebar":"docSidebar"},"tips-tricks/virtual-environment":{"id":"tips-tricks/virtual-environment","title":"Python Virtual Environment","description":"In general, when developing with Python, it is usually recommended to use a virtual environment such as conda, venv, or virtualenv to avoid breaking the existing Python development environment caused by different projects introducing different versions of the same libraries. Below are examples of configuration methods for conda and venv. You can choose either one to use, but Conda virtual environment is recommended as it better supports compatibility with data analysis and other open-source libraries.","sidebar":"docSidebar"},"tutorials/index":{"id":"tutorials/index","title":"Tutorials","description":"You can execute the crackntus tutorial command in the CrackNuts environment to open the tutorials that come with the installed version. Alternatively, you can visit the following links for the latest tutorials:","sidebar":"docSidebar"}}}}')}}]);